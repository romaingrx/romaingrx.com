---
import Logo from '@/components/logo/logo';
import { routes } from '@/configs/routes';
import { MobileNav } from './nav/header/mobile';
import ThemeToggle from './ThemeToggle.astro';

const { pathname } = Astro.url;

const navigation = [
  { name: 'Home', href: routes.home },
  { name: 'Blog', href: routes.blogs },
  { name: 'Notes', href: routes.notes },
  { name: 'About', href: routes.about },
];

// Function to check if a nav item is active
const isActive = (href: string) => {
  if (href === '//' || href === '/') {
    return pathname === '/';
  }
  return pathname.startsWith(href);
};
---

<header
  class="sticky top-0 z-50 w-full border-b border-transparent bg-background/95 backdrop-blur-sm transition-all duration-300 ease-in-out"
  id="header"
>
  <nav
    class="mx-auto flex max-w-6xl items-center justify-between px-6 py-2 lg:px-8"
    aria-label="Global"
  >
    <!-- Logo -->
    <div class="flex items-center">
      <a
        href="/"
        class="flex items-center gap-3 transition-opacity duration-200 hover:opacity-80"
        aria-label="Go to homepage"
      >
        <Logo class="h-7" with_text={false} />
      </a>
    </div>

    <!-- Desktop Navigation -->
    <div class="hidden md:flex md:items-center md:gap-1">
      {
        navigation.map((item) => (
          <a
            href={item.href}
            class:list={[
              'relative px-3 py-1.5 text-sm font-medium transition-colors duration-200',
              isActive(item.href)
                ? 'text-foreground'
                : 'text-muted-foreground hover:text-foreground',
            ]}
            aria-current={isActive(item.href) ? 'page' : undefined}
          >
            {item.name}
            {/* Active indicator - elegant underline */}
            {isActive(item.href) && (
              <div
                transition:name="active-indicator"
                class="absolute bottom-0 left-1/2 h-px w-6 -translate-x-1/2 bg-foreground transition-all duration-200"
              />
            )}
          </a>
        ))
      }
    </div>

    <!-- Actions -->
    <div class="flex items-center gap-2">
      <ThemeToggle />

      <!-- Mobile Navigation -->
      <MobileNav navigation={navigation} currentPath={pathname} client:load />
    </div>
  </nav>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const header = document.getElementById('header');
    let lastScrollY = 0;
    let ticking = false;

    // Enhanced scroll effects with hide/show functionality
    const handleScroll = () => {
      if (!header) return;

      const currentScrollY = window.scrollY;
      const scrolledDown = currentScrollY > lastScrollY;
      const scrolledUp = currentScrollY < lastScrollY;
      const isAtTop = currentScrollY <= 10;

      // Hide header when scrolling down, show when scrolling up
      if (scrolledDown && currentScrollY > 100) {
        header.style.transform = 'translateY(-100%)';
      } else if (scrolledUp || isAtTop) {
        header.style.transform = 'translateY(0)';
      }

      // Border effects
      if (currentScrollY > 10) {
        header.classList.add('border-border/20', 'shadow-sm');
        header.classList.remove('border-transparent');
      } else {
        header.classList.remove('border-border/20', 'shadow-sm');
        header.classList.add('border-transparent');
      }

      lastScrollY = currentScrollY;
    };

    // Optimized scroll handler
    const onScroll = () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          handleScroll();
          ticking = false;
        });
        ticking = true;
      }
    };

    window.addEventListener('scroll', onScroll, { passive: true });
    handleScroll(); // Initial check
  });
</script>
