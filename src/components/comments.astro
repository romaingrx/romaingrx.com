---
import { site } from '@/configs/site';

interface Props {
  /**
   * Optional category name to use for the comments.
   * Defaults to "Comments" if not provided.
   */
  category?: string;

  /**
   * Optional category ID to use for the comments.
   * Defaults to the main comments category ID if not provided.
   */
  categoryId?: string;
}

const { category = 'Comments', categoryId = 'DIC_kwDOM6pBlc4Cmqh8' } = Astro.props;

// We're no longer using custom mapping, always using og:title directly
---

<script
  is:inline
  src="https://giscus.app/client.js"
  data-repo={site.repo}
  data-repo-id="R_kgDOM6pBlQ"
  data-category={category}
  data-category-id={categoryId}
  data-mapping="og:title"
  data-strict="0"
  data-reactions-enabled="1"
  data-emit-metadata="0"
  data-input-position="top"
  data-lang="en"
  data-loading="lazy"
  data-theme="gruvbox"
  crossorigin="anonymous"
  async></script>

<script is:inline>
  function getTheme() {
    return document.documentElement.classList.contains('dark') ? 'gruvbox' : 'gruvbox';
  }

  function updateGiscusTheme() {
    const theme = getTheme();
    // Update the script tag
    const giscusScript = document.querySelector('script[src*="giscus"]');
    if (giscusScript) {
      giscusScript.setAttribute('data-theme', theme);
    }

    // Update the iframe if it exists
    const iframe = document.querySelector('iframe.giscus-frame');
    if (iframe) {
      iframe.contentWindow.postMessage({ giscus: { setConfig: { theme } } }, 'https://giscus.app');
    }
  }

  // Set the initial theme on the script tag before Giscus loads
  document.querySelector('script[src*="giscus"]').setAttribute('data-theme', getTheme());

  // Watch for theme changes
  const observer = new MutationObserver(updateGiscusTheme);
  observer.observe(document.documentElement, { attributeFilter: ['class'] });

  // Setup iframe observer when the iframe is created
  function setupIframeObserver() {
    const iframe = document.querySelector('iframe.giscus-frame');
    if (iframe) {
      updateGiscusTheme(); // Ensure theme is synced when iframe appears
      const iframeObserver = new MutationObserver(updateGiscusTheme);
      iframeObserver.observe(iframe, { attributeFilter: ['data-theme'] });
    }
  }

  // Watch for iframe creation
  const iframeWatcher = new MutationObserver(() => {
    if (document.querySelector('iframe.giscus-frame')) {
      setupIframeObserver();
      iframeWatcher.disconnect(); // Stop watching once iframe is found
    }
  });

  iframeWatcher.observe(document.body, { childList: true, subtree: true });

  // Update theme on page navigation
  document.addEventListener('astro:page-load', () => {
    updateGiscusTheme();
  });
</script>
