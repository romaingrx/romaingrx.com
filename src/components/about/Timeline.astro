---
import { Icon } from 'astro-icon/components';
import { getCollection, render, type CollectionEntry } from 'astro:content';
import CompactProse from '../ui/compact-prose.astro';

interface Props {
  type?: 'education' | 'experience' | 'project';
  title: string;
}

const { type, title } = Astro.props;

// Get timeline entries
const entries = await getCollection('timeline');
const filteredEntries = type
  ? entries.filter((entry: CollectionEntry<'timeline'>) => entry.data.type === type)
  : entries;

// Sort items by date (most recent first)
const sortedItems = [...filteredEntries].sort((a, b) => {
  const dateA = a.data.endDate === 'present' ? new Date() : new Date(a.data.startDate);
  const dateB = b.data.endDate === 'present' ? new Date() : new Date(b.data.startDate);
  return dateB.getTime() - dateA.getTime();
});

// Pre-render all content
const renderedContent = await Promise.all(
  sortedItems.map(async (item: CollectionEntry<'timeline'>) => {
    const rendered = await render(item);
    return {
      item,
      Content: rendered.Content,
    };
  })
);
---

<style>
  .timeline-content {
    @apply text-sm leading-relaxed text-muted-foreground;
  }

  .timeline-content :global(p) {
    @apply mb-3;
  }

  .timeline-content :global(ul) {
    @apply mb-3 list-disc space-y-1 pl-4;
  }

  .timeline-content :global(li) {
    @apply leading-relaxed;
  }

  .timeline-content :global(a) {
    @apply text-foreground underline decoration-muted-foreground transition-colors hover:text-primary hover:decoration-primary;
  }

  .timeline-content :global(strong) {
    @apply font-medium text-foreground;
  }
</style>

<div class="space-y-6">
  <!-- Subtle section title -->
  <div class="flex items-center gap-3">
    <h2 class="text-lg font-semibold text-foreground">
      {title}
    </h2>
    <div class="h-px flex-1 bg-border"></div>
  </div>

  <div class="space-y-6">
    {
      renderedContent.map(({ item, Content }) => {
        const isActive = item.data.endDate === 'present';
        return (
          <div class="group relative">
            <div class="rounded-lg border border-border/50 bg-card/30 p-5 transition-all duration-200 hover:border-border hover:bg-card/50 hover:shadow-sm">
              <div class="flex flex-col gap-3 sm:flex-row sm:items-start sm:justify-between">
                <div class="min-w-0 flex-1 space-y-1">
                  <div class="flex items-center gap-2">
                    <h3 class="font-medium text-foreground">{item.data.title}</h3>
                    {isActive && (
                      <span class="inline-flex items-center rounded-full bg-emerald-50 px-2 py-0.5 text-xs font-medium text-emerald-700 ring-1 ring-emerald-600/20 dark:bg-emerald-500/10 dark:text-emerald-400 dark:ring-emerald-500/20">
                        Current
                      </span>
                    )}
                  </div>

                  <div class="text-sm text-muted-foreground">
                    {item.data.organization_url ? (
                      <a
                        href={item.data.organization_url}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="transition-colors hover:text-foreground"
                      >
                        {item.data.organization}
                      </a>
                    ) : (
                      <span>{item.data.organization}</span>
                    )}
                  </div>
                </div>

                <div class="flex flex-col gap-1 text-xs text-muted-foreground sm:text-right">
                  <div class="flex items-center gap-1.5 sm:justify-end">
                    <Icon name="lucide:calendar" class="h-3 w-3" />
                    <span class="whitespace-nowrap font-mono">
                      {item.data.startDate}
                      {item.data.endDate ? ` â€“ ${item.data.endDate}` : ''}
                    </span>
                  </div>
                  <div class="flex items-center gap-1.5 sm:justify-end">
                    <Icon name="lucide:map-pin" class="h-3 w-3" />
                    <span class="whitespace-nowrap">{item.data.location}</span>
                  </div>
                </div>
              </div>
              <div class="mt-4">
                <CompactProse>
                  <Content />
                </CompactProse>
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
</div>
