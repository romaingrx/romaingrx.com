---
import { render } from 'astro:content';
import { components } from '@/components/blog/components/index.astro';
import PostFooter from '@/components/blog/footer/index.astro';
import PostHeader from '@/components/blog/post-header.astro';
import Prose from '@/components/blog/prose.astro';
import TableOfContents from '@/components/blog/toc/index.astro';
import Shell from '@/components/Shell.astro';
import BlogLayout from '@/layouts/BlogLayout.astro';
import { getBlogPosts, type BlogPostWithAuthors } from '@/lib/collections';
import { buildToc } from '@/lib/toc';

// export const prerender = true;

type Props = {
  post: BlogPostWithAuthors;
};

export async function getStaticPaths() {
  const posts = await getBlogPosts();
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, headings } = await render(post);
---

<BlogLayout post={post}>
  <PostHeader post={post} />
  <div class="mt-10"></div>
  <TableOfContents headings={headings} />
  <Shell type="article">
    <Prose Element="article">
      <Content components={components} />
    </Prose>
    <PostFooter post={post} />
  </Shell>
</BlogLayout>
